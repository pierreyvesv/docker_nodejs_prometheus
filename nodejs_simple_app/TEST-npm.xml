<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.3450" tests="3" failures="1">
  <testsuite name="Root Suite" timestamp="2021-03-24T16:50:20" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Server!" timestamp="2021-03-24T16:50:20" tests="3" file="/c/Users/PYV01.octave/git/octave/code/utilities/nodejs_simple_app/test/test-pages.js" time="0.3450" failures="1">
    <testcase name="Server! welcomes user to the api" time="0.1920" classname="welcomes user to the api">
    </testcase>
    <testcase name="Server! Main page content" time="0.1340" classname="Main page content">
    </testcase>
    <testcase name="Server! Prometheus page content" time="0.0190" classname="Prometheus page content">
      <failure message="expected &apos;# HELP process_cpu_user_seconds_total Total user CPU time spent in seconds.\n# TYPE process_cpu_user_seconds_total counter\nprocess_cpu_user_seconds_total 0.046875\n\n# HELP process_cpu_system_seconds_total Total system CPU time spent in seconds.\n# TYPE process_cpu_system_seconds_total counter\nprocess_cpu_system_seconds_total 0.015625\n\n# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.\n# TYPE process_cpu_seconds_total counter\nprocess_cpu_seconds_total 0.0625\n\n# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.\n# TYPE process_start_time_seconds gauge\nprocess_start_time_seconds 1616604619\n\n# HELP process_resident_memory_bytes Resident memory size in bytes.\n# TYPE process_resident_memory_bytes gauge\nprocess_resident_memory_bytes 51482624\n\n# HELP process_virtual_memory_bytes Virtual memory size in bytes.\n# TYPE process_virtual_memory_bytes gauge\nprocess_virtual_memory_bytes 863928320\n\n# HELP process_heap_bytes Process heap size in bytes.\n# TYPE process_heap_bytes gauge\nprocess_heap_bytes 0\n\n# HELP process_open_fds Number of open file descriptors.\n# TYPE process_open_fds gauge\nprocess_open_fds 25\n\n# HELP process_max_fds Maximum number of open file descriptors.\n# TYPE process_max_fds gauge\nprocess_max_fds 1024\n\n# HELP nodejs_eventloop_lag_seconds Lag of event loop in seconds.\n# TYPE nodejs_eventloop_lag_seconds gauge\nnodejs_eventloop_lag_seconds 0.0094232\n\n# HELP nodejs_eventloop_lag_min_seconds The minimum recorded event loop delay.\n# TYPE nodejs_eventloop_lag_min_seconds gauge\nnodejs_eventloop_lag_min_seconds 0.006930432\n\n# HELP nodejs_eventloop_lag_max_seconds The maximum recorded event loop delay.\n# TYPE nodejs_eventloop_lag_max_seconds gauge\nnodejs_eventloop_lag_max_seconds 0.016416767\n\n# HELP nodejs_eventloop_lag_mean_seconds The mean of the recorded event loop delays.\n# TYPE nodejs_eventloop_lag_mean_seconds gauge\nnodejs_eventloop_lag_mean_seconds 0.010735087483870968\n\n# HELP nodejs_eventloop_lag_stddev_seconds The standard deviation of the recorded event loop delays.\n# TYPE nodejs_eventloop_lag_stddev_seconds gauge\nnodejs_eventloop_lag_stddev_seconds 0.0014714384478125122\n\n# HELP nodejs_eventloop_lag_p50_seconds The 50th percentile of the recorded event loop delays.\n# TYPE nodejs_eventloop_lag_p50_seconds gauge\nnodejs_eventloop_lag_p50_seconds 0.010788863\n\n# HELP nodejs_eventloop_lag_p90_seconds The 90th percentile of the recorded event loop delays.\n# TYPE nodejs_eventloop_lag_p90_seconds gauge\nnodejs_eventloop_lag_p90_seconds 0.011313151\n\n# HELP nodejs_eventloop_lag_p99_seconds The 99th percentile of the recorded event loop delays.\n# TYPE nodejs_eventloop_lag_p99_seconds gauge\nnodejs_eventloop_lag_p99_seconds 0.016416767\n\n# HELP nodejs_active_handles Number of active libuv handles grouped by handle type. Every handle type is C++ class name.\n# TYPE nodejs_active_handles gauge\nnodejs_active_handles{type=&quot;WriteStream&quot;} 1\nnodejs_active_handles{type=&quot;ReadStream&quot;} 1\nnodejs_active_handles{type=&quot;Server&quot;} 1\nnodejs_active_handles{type=&quot;Socket&quot;} 2\n\n# HELP nodejs_active_handles_total Total number of active handles.\n# TYPE nodejs_active_handles_total gauge\nnodejs_active_handles_total 5\n\n# HELP nodejs_active_requests Number of active libuv requests grouped by request type. Every request type is C++ class name.\n# TYPE nodejs_active_requests gauge\n\n# HELP nodejs_active_requests_total Total number of active requests.\n# TYPE nodejs_active_requests_total gauge\nnodejs_active_requests_total 0\n\n# HELP nodejs_heap_size_total_bytes Process heap size from Node.js in bytes.\n# TYPE nodejs_heap_size_total_bytes gauge\nnodejs_heap_size_total_bytes 33828864\n\n# HELP nodejs_heap_size_used_bytes Process heap size used from Node.js in bytes.\n# TYPE nodejs_heap_size_used_bytes gauge\nnodejs_heap_size_used_bytes 16433376\n\n# HELP nodejs_external_memory_bytes Node.js external memory size in bytes.\n# TYPE nodejs_external_memory_bytes gauge\nnodejs_external_memory_bytes 1783906\n\n# HELP nodejs_heap_space_size_total_bytes Process heap space size total from Node.js in bytes.\n# TYPE nodejs_heap_space_size_total_bytes gauge\nnodejs_heap_space_size_total_bytes{space=&quot;read_only&quot;} 151552\nnodejs_heap_space_size_total_bytes{space=&quot;new&quot;} 16777216\nnodejs_heap_space_size_total_bytes{space=&quot;old&quot;} 14303232\nnodejs_heap_space_size_total_bytes{space=&quot;code&quot;} 360448\nnodejs_heap_space_size_total_bytes{space=&quot;map&quot;} 1052672\nnodejs_heap_space_size_total_bytes{space=&quot;large_object&quot;} 1134592\nnodejs_heap_space_size_total_bytes{space=&quot;code_large_object&quot;} 49152\nnodejs_heap_space_size_total_bytes{space=&quot;new_large_object&quot;} 0\n\n# HELP nodejs_heap_space_size_used_bytes Process heap space size used from Node.js in bytes.\n# TYPE nodejs_heap_space_size_used_bytes gauge\nnodejs_heap_space_size_used_bytes{space=&quot;read_only&quot;} 150392\nnodejs_heap_space_size_used_bytes{space=&quot;new&quot;} 2135808\nnodejs_heap_space_size_used_bytes{space=&quot;old&quot;} 12143992\nnodejs_heap_space_size_used_bytes{space=&quot;code&quot;} 238144\nnodejs_heap_space_size_used_bytes{space=&quot;map&quot;} 643392\nnodejs_heap_space_size_used_bytes{space=&quot;large_object&quot;} 1121192\nnodejs_heap_space_size_used_bytes{space=&quot;code_large_object&quot;} 2880\nnodejs_heap_space_size_used_bytes{space=&quot;new_large_object&quot;} 0\n\n# HELP nodejs_heap_space_size_available_bytes Process heap space size available from Node.js in bytes.\n# TYPE nodejs_heap_space_size_available_bytes gauge\nnodejs_heap_space_size_available_bytes{space=&quot;read_only&quot;} 0\nnodejs_heap_space_size_available_bytes{space=&quot;new&quot;} 6243584\nnodejs_heap_space_size_available_bytes{space=&quot;old&quot;} 2121680\nnodejs_heap_space_size_available_bytes{space=&quot;code&quot;} 9056\nnodejs_heap_space_size_available_bytes{space=&quot;map&quot;} 407648\nnodejs_heap_space_size_available_bytes{space=&quot;large_object&quot;} 0\nnodejs_heap_space_size_available_bytes{space=&quot;code_large_object&quot;} 0\nnodejs_heap_space_size_available_bytes{space=&quot;new_large_object&quot;} 8379392\n\n# HELP nodejs_version_info Node.js version info.\n# TYPE nodejs_version_info gauge\nnodejs_version_info{version=&quot;v14.15.0&quot;,major=&quot;14&quot;,minor=&quot;15&quot;,patch=&quot;0&quot;} 1\n\n# HELP nodejs_gc_duration_seconds Garbage collection duration by kind, one of major, minor, incremental or weakcb.\n# TYPE nodejs_gc_duration_seconds histogram\n\n# HELP checkouts_total Total number of checkouts\n# TYPE checkouts_total counter\n\n# HELP http_request_duration_ms Duration of HTTP requests in ms\n# TYPE http_request_duration_ms histogram\nhttp_request_duration_ms_bucket{le=&quot;0.1&quot;,method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 0\nhttp_request_duration_ms_bucket{le=&quot;5&quot;,method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 0\nhttp_request_duration_ms_bucket{le=&quot;15&quot;,method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 0\nhttp_request_duration_ms_bucket{le=&quot;50&quot;,method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 0\nhttp_request_duration_ms_bucket{le=&quot;100&quot;,method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 0\nhttp_request_duration_ms_bucket{le=&quot;200&quot;,method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 2\nhttp_request_duration_ms_bucket{le=&quot;300&quot;,method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 2\nhttp_request_duration_ms_bucket{le=&quot;400&quot;,method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 2\nhttp_request_duration_ms_bucket{le=&quot;500&quot;,method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 2\nhttp_request_duration_ms_bucket{le=&quot;+Inf&quot;,method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 2\nhttp_request_duration_ms_sum{method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 296\nhttp_request_duration_ms_count{method=&quot;GET&quot;,route=&quot;/&quot;,code=&quot;200&quot;} 2\n&apos; to match /dede# HELP.*/" type="AssertionError"><![CDATA[AssertionError: expected '# HELP process_cpu_user_seconds_total Total user CPU time spent in seconds.\n# TYPE process_cpu_user_seconds_total counter\nprocess_cpu_user_seconds_total 0.046875\n\n# HELP process_cpu_system_seconds_total Total system CPU time spent in seconds.\n# TYPE process_cpu_system_seconds_total counter\nprocess_cpu_system_seconds_total 0.015625\n\n# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.\n# TYPE process_cpu_seconds_total counter\nprocess_cpu_seconds_total 0.0625\n\n# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.\n# TYPE process_start_time_seconds gauge\nprocess_start_time_seconds 1616604619\n\n# HELP process_resident_memory_bytes Resident memory size in bytes.\n# TYPE process_resident_memory_bytes gauge\nprocess_resident_memory_bytes 51482624\n\n# HELP process_virtual_memory_bytes Virtual memory size in bytes.\n# TYPE process_virtual_memory_bytes gauge\nprocess_virtual_memory_bytes 863928320\n\n# HELP process_heap_bytes Process heap size in bytes.\n# TYPE process_heap_bytes gauge\nprocess_heap_bytes 0\n\n# HELP process_open_fds Number of open file descriptors.\n# TYPE process_open_fds gauge\nprocess_open_fds 25\n\n# HELP process_max_fds Maximum number of open file descriptors.\n# TYPE process_max_fds gauge\nprocess_max_fds 1024\n\n# HELP nodejs_eventloop_lag_seconds Lag of event loop in seconds.\n# TYPE nodejs_eventloop_lag_seconds gauge\nnodejs_eventloop_lag_seconds 0.0094232\n\n# HELP nodejs_eventloop_lag_min_seconds The minimum recorded event loop delay.\n# TYPE nodejs_eventloop_lag_min_seconds gauge\nnodejs_eventloop_lag_min_seconds 0.006930432\n\n# HELP nodejs_eventloop_lag_max_seconds The maximum recorded event loop delay.\n# TYPE nodejs_eventloop_lag_max_seconds gauge\nnodejs_eventloop_lag_max_seconds 0.016416767\n\n# HELP nodejs_eventloop_lag_mean_seconds The mean of the recorded event loop delays.\n# TYPE nodejs_eventloop_lag_mean_seconds gauge\nnodejs_eventloop_lag_mean_seconds 0.010735087483870968\n\n# HELP nodejs_eventloop_lag_stddev_seconds The standard deviation of the recorded event loop delays.\n# TYPE nodejs_eventloop_lag_stddev_seconds gauge\nnodejs_eventloop_lag_stddev_seconds 0.0014714384478125122\n\n# HELP nodejs_eventloop_lag_p50_seconds The 50th percentile of the recorded event loop delays.\n# TYPE nodejs_eventloop_lag_p50_seconds gauge\nnodejs_eventloop_lag_p50_seconds 0.010788863\n\n# HELP nodejs_eventloop_lag_p90_seconds The 90th percentile of the recorded event loop delays.\n# TYPE nodejs_eventloop_lag_p90_seconds gauge\nnodejs_eventloop_lag_p90_seconds 0.011313151\n\n# HELP nodejs_eventloop_lag_p99_seconds The 99th percentile of the recorded event loop delays.\n# TYPE nodejs_eventloop_lag_p99_seconds gauge\nnodejs_eventloop_lag_p99_seconds 0.016416767\n\n# HELP nodejs_active_handles Number of active libuv handles grouped by handle type. Every handle type is C++ class name.\n# TYPE nodejs_active_handles gauge\nnodejs_active_handles{type="WriteStream"} 1\nnodejs_active_handles{type="ReadStream"} 1\nnodejs_active_handles{type="Server"} 1\nnodejs_active_handles{type="Socket"} 2\n\n# HELP nodejs_active_handles_total Total number of active handles.\n# TYPE nodejs_active_handles_total gauge\nnodejs_active_handles_total 5\n\n# HELP nodejs_active_requests Number of active libuv requests grouped by request type. Every request type is C++ class name.\n# TYPE nodejs_active_requests gauge\n\n# HELP nodejs_active_requests_total Total number of active requests.\n# TYPE nodejs_active_requests_total gauge\nnodejs_active_requests_total 0\n\n# HELP nodejs_heap_size_total_bytes Process heap size from Node.js in bytes.\n# TYPE nodejs_heap_size_total_bytes gauge\nnodejs_heap_size_total_bytes 33828864\n\n# HELP nodejs_heap_size_used_bytes Process heap size used from Node.js in bytes.\n# TYPE nodejs_heap_size_used_bytes gauge\nnodejs_heap_size_used_bytes 16433376\n\n# HELP nodejs_external_memory_bytes Node.js external memory size in bytes.\n# TYPE nodejs_external_memory_bytes gauge\nnodejs_external_memory_bytes 1783906\n\n# HELP nodejs_heap_space_size_total_bytes Process heap space size total from Node.js in bytes.\n# TYPE nodejs_heap_space_size_total_bytes gauge\nnodejs_heap_space_size_total_bytes{space="read_only"} 151552\nnodejs_heap_space_size_total_bytes{space="new"} 16777216\nnodejs_heap_space_size_total_bytes{space="old"} 14303232\nnodejs_heap_space_size_total_bytes{space="code"} 360448\nnodejs_heap_space_size_total_bytes{space="map"} 1052672\nnodejs_heap_space_size_total_bytes{space="large_object"} 1134592\nnodejs_heap_space_size_total_bytes{space="code_large_object"} 49152\nnodejs_heap_space_size_total_bytes{space="new_large_object"} 0\n\n# HELP nodejs_heap_space_size_used_bytes Process heap space size used from Node.js in bytes.\n# TYPE nodejs_heap_space_size_used_bytes gauge\nnodejs_heap_space_size_used_bytes{space="read_only"} 150392\nnodejs_heap_space_size_used_bytes{space="new"} 2135808\nnodejs_heap_space_size_used_bytes{space="old"} 12143992\nnodejs_heap_space_size_used_bytes{space="code"} 238144\nnodejs_heap_space_size_used_bytes{space="map"} 643392\nnodejs_heap_space_size_used_bytes{space="large_object"} 1121192\nnodejs_heap_space_size_used_bytes{space="code_large_object"} 2880\nnodejs_heap_space_size_used_bytes{space="new_large_object"} 0\n\n# HELP nodejs_heap_space_size_available_bytes Process heap space size available from Node.js in bytes.\n# TYPE nodejs_heap_space_size_available_bytes gauge\nnodejs_heap_space_size_available_bytes{space="read_only"} 0\nnodejs_heap_space_size_available_bytes{space="new"} 6243584\nnodejs_heap_space_size_available_bytes{space="old"} 2121680\nnodejs_heap_space_size_available_bytes{space="code"} 9056\nnodejs_heap_space_size_available_bytes{space="map"} 407648\nnodejs_heap_space_size_available_bytes{space="large_object"} 0\nnodejs_heap_space_size_available_bytes{space="code_large_object"} 0\nnodejs_heap_space_size_available_bytes{space="new_large_object"} 8379392\n\n# HELP nodejs_version_info Node.js version info.\n# TYPE nodejs_version_info gauge\nnodejs_version_info{version="v14.15.0",major="14",minor="15",patch="0"} 1\n\n# HELP nodejs_gc_duration_seconds Garbage collection duration by kind, one of major, minor, incremental or weakcb.\n# TYPE nodejs_gc_duration_seconds histogram\n\n# HELP checkouts_total Total number of checkouts\n# TYPE checkouts_total counter\n\n# HELP http_request_duration_ms Duration of HTTP requests in ms\n# TYPE http_request_duration_ms histogram\nhttp_request_duration_ms_bucket{le="0.1",method="GET",route="/",code="200"} 0\nhttp_request_duration_ms_bucket{le="5",method="GET",route="/",code="200"} 0\nhttp_request_duration_ms_bucket{le="15",method="GET",route="/",code="200"} 0\nhttp_request_duration_ms_bucket{le="50",method="GET",route="/",code="200"} 0\nhttp_request_duration_ms_bucket{le="100",method="GET",route="/",code="200"} 0\nhttp_request_duration_ms_bucket{le="200",method="GET",route="/",code="200"} 2\nhttp_request_duration_ms_bucket{le="300",method="GET",route="/",code="200"} 2\nhttp_request_duration_ms_bucket{le="400",method="GET",route="/",code="200"} 2\nhttp_request_duration_ms_bucket{le="500",method="GET",route="/",code="200"} 2\nhttp_request_duration_ms_bucket{le="+Inf",method="GET",route="/",code="200"} 2\nhttp_request_duration_ms_sum{method="GET",route="/",code="200"} 296\nhttp_request_duration_ms_count{method="GET",route="/",code="200"} 2\n' to match /dede# HELP.*/
    at Request._callback (test/test-pages.js:37:25)
    at Request.self.callback (node_modules/request/request.js:185:22)
    at Request.<anonymous> (node_modules/request/request.js:1154:10)
    at IncomingMessage.<anonymous> (node_modules/request/request.js:1076:12)
    at endReadableNT (_stream_readable.js:1327:12)
    at processTicksAndRejections (internal/process/task_queues.js:80:21)]]></failure>
    </testcase>
  </testsuite>
</testsuites>